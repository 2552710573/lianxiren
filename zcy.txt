ModifyActivity.java
主要常量
PICTURES：一个整数数组，存储了一组图像资源ID，用于选择联系人头像。
EXTRA_PEOPLE_DATA：用于通过Intent传递联系人数据的键。
各种文本常量，如错误消息和操作成功的消息。
主要变量
people：存储当前正在编辑的联系人信息。
imageView：显示联系人头像的ImageView。
infoGroupLayout：触发选择联系人分组的视图。
nameTextInput：用于输入联系人姓名的TextInputLayout。
group：存储当前选择的联系人分组。
pictureId：当前选择的联系人头像的资源ID。
主要方法和事件处理
onCreate：初始化活动，设置布局，处理传入的Intent数据，为各种UI组件设置事件监听器。
onOptionsItemSelected：处理操作栏上的项选择事件，如返回按钮。
createDialog：创建并配置一个选择头像的对话框。
onDismiss：当头像选择对话框关闭时，更新选择的头像ID。
功能实现
初始化界面：根据是否传递了People对象来加载联系人的数据，或设置默认值。
编辑或添加联系人：
用户可以修改联系人的姓名、电话、额外信息和分组。
检查电话号码格式和姓名的空值。
如果是新联系人，则创建一个新的People对象并保存到数据库。
如果是现有联系人，更新其信息并保存更改。
头像选择：
点击头像ImageView弹出选择对话框，用户可以从预定义的图片中选择一个作为联系人的头像。
这个活动通过提供一个用户友好的界面，使用户能够轻松地添加或修改联系人信息，并通过直观的对话框选择联系人头像。此外，它还处理了一些基本的输入验证，确保数据的正确性和完整性。
selectAdapter.java
组件
pictures：一个静态的整型数组，存储了可供选择的图片资源ID。
ViewHolder：一个静态内部类，用于定义和缓存RecyclerView中单个项的视图。每个项包括一个ImageView。
context：上下文对象，用于访问全局应用或活动级的资源。
dialog：一个AlertDialog实例，用于在用户选择图片后关闭对话框。
imageView：引用外部的ImageView，用于在用户选择图片后显示选中的图片。
方法
构造方法(SelectAdapter)：初始化适配器，接收上下文、对话框对象和一个ImageView，以便在用户选择图片后更新该视图。
getPictureId：静态方法，返回最后一次用户选择的图片资源ID。
onCreateViewHolder：在需要新的视图容器时调用，创建并返回一个ViewHolder实例，同时设置图片点击时的行为，包括更新imageView的显示和关闭对话框。
onBindViewHolder：将数据（图片资源）绑定到每个视图容器上，即将对应位置的图片加载到ViewHolder的ImageView中。
getItemCount：返回图片列表的长度，即pictures数组的长度。
功能实现
图片展示：适配器管理一个图片列表，每个列表项由一个ImageView组成，展示一个可供选择的图片。
图片选择交互：
当用户点击某个图片时，适配器会将该图片加载到指定的ImageView（通常在主界面上）。
同时记录选中的图片资源ID，并关闭包含图片列表的对话框。
资源管理：使用Glide库来异步加载图片，优化了图片的加载和显示效果，减少内存占用和防止应用卡顿。
这个适配器非常适用于需要用户从一个图片列表中选择一项的场景，例如选择联系人头像、选择装饰物品的图片等。通过RecyclerView和Glide的结合使用，提高了界面的响应速度和用户体验。